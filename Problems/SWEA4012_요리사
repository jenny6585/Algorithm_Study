import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class Main{
	static int N;
	static int [][]S;//시너지ㅣ
	static int []A;//A요리 
	static int []B;//B 요리 
	static boolean[] isSelected;//음색들중 A용
	static int[] flavor;//재료 2개 선택
	static int sum;//음식들 시너지 합
	static int minDiff;//맛의 최소 저장
	//재료 2개의 시너지 구하는 함수
	static void getFlavor(int []arr,int depth, int start) {
		if(depth==2) {
			int x = arr[flavor[0]];//음식하나
			int y = arr[flavor[1]];//음식 둘
			sum+= S[x][y]+S[y][x];//두개의 시너지 합
			return;
		}
		for (int i = start; i < arr.length; i++) {//음식 두개 구하는 조합
			flavor[depth] =i;
			getFlavor(arr, depth+1, i+1);
		}
	}
	
	static int tasteSum(int[] arr) {//음식의 합을 구해서 반환
		sum=0;//음식 합을 초기화
		flavor = new int[2];//음식 두개 저장할 배열
		//2개씩 뽑기
		getFlavor(arr, 0, 0);
		return sum;
		
	}
	
	public static void comb(int depth,int start) {//A,B를 구하는 함수
		if(depth==N/2) {//A선택 후 B를 구하기
			int b=0;
			for (int i = 0; i < N; i++) {
				if(!isSelected[i]) {//선택되지 않은 것이 B
					B[b++]=i;
				}
			}
			
			int a_sum = tasteSum(A);//A의 합계
			int b_sum = tasteSum(B);//B의 합계
			minDiff = Math.min(minDiff, Math.abs(a_sum- b_sum));

			return;
		}
		for (int i = start; i < N; i++) {//재료들 중에서 A 선택하기
			if(!isSelected[i]) {
				A[depth] = i;
				isSelected[i] = true;
				comb(depth+1,i+1);
				isSelected[i] = false;
			}
		}
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));//버퍼 인풋
		StringBuilder sb = new StringBuilder();
		
		int tc = Integer.parseInt(br.readLine());//테스트 케이스
		for (int t = 1; t <=tc; t++) {//테스트 케이스 만큼
			minDiff = Integer.MAX_VALUE;//최소값
			N = Integer.parseInt(br.readLine());
			S = new int[N][N];//시너지 수 구하고
			isSelected = new boolean[N];
			A=new int[N/2];
			B=new int[N/2];
			for (int i = 0; i < N; i++) {//시너지 입력받기
				String[] input = br.readLine().split(" ");
				for (int j = 0; j <N; j++) {
					S[i][j] = Integer.parseInt(input[j]);
				}
			}
			comb(0,0);//A,B구하기
			sb.append("#"+t+" "+minDiff).append("\n");
		}
		System.out.println(sb);//출력

	}

}
