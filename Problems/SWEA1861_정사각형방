import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;

import javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction;

public class Main{
	
	public static int find(int[][]board,int n,int i,int j) {//인덱스별로 가능 이동 횟수 카운트
		int visited[][] = new int[n][n];//방문했는지를 확인
		int count=1;//이동 횟수를 위한 변수
		for(int k=0;k<n*n;k++){//최대 이동 횟수로 잡고
			if((j+1)<n && board[i][j]+1 == board[i][j+1] && visited[i][j+1]==0 ) {//왼쪽이 해당일때
				count++;
				j++;
				visited[i][j]++;
			}else if((j-1)>=0 && board[i][j]+1 == board[i][j-1] && visited[i][j-1]==0 ) {//오른쪽이 해당일때
				count++;
				j--;
				visited[i][j]++;
			}else if((i+1)<n && board[i][j]+1 == board[i+1][j] && visited[i+1][j]==0 ) {//아래쪽이 해당일때
				count++;
				i++;
				visited[i][j]++;
			}else if((i-1)>=0 && board[i][j]+1 == board[i-1][j] && visited[i-1][j]==0 ) {//위쪽이 해당일때
				count++;
				i--;
				visited[i][j]++;
			}else {//아무곳도 해당이 안되면 break
				break;
			}
		}
		return count;
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		int index;
		int max=0;
		String string[];
		int testcase = Integer.parseInt(br.readLine());//testcase
		for (int t = 1; t <=testcase; t++) {
			index=Integer.MAX_VALUE;
			int n = Integer.parseInt(br.readLine());
			int board[][] = new int[n][n];
			
			for (int i = 0; i < n; i++) {//get input board
				string = br.readLine().split(" ");
				for (int j = 0; j < n; j++) {
					board[i][j] = Integer.parseInt(string[j]);//입력값 int 값으로 변환
				}
			}//end getting input board
			max=0;
			for (int i = 0; i < n; i++) {
				for (int j = 0; j < n; j++) {//board를 돌면서
					int a = find(board,n,i,j);
					if(a>=max) {//이동횟수가  max보다 크거나 같으면
						if(a==max && board[i][j]<index ) {
							index = board[i][j];//인덱스는 더  작은 것으로 저장

						}else if(a>max) {//max보다 크면
							max = a;//max 값 변경
							index= board[i][j];//인덱스도 변경
						}
					}
				}
			}//end for
			
			bw.write("#"+t+" "+index+" "+max+"\n");
		}
		bw.flush();
		bw.close();

	}//end main

}//end class
